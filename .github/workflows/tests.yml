name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: pip install pytest coverage
      - name: Run tests with coverage
        run: coverage run --source=image_cli,sora_cli -m pytest
      - name: Publish coverage summary
        run: |
          coverage report --show-missing > coverage.txt
          cat coverage.txt
          {
            echo '### Coverage Summary';
            echo '```';
            cat coverage.txt;
            echo '```';
          } >> "$GITHUB_STEP_SUMMARY"
      - name: Comment coverage on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const marker = '<!-- coverage-report -->';
            const coverage = fs.readFileSync('coverage.txt', 'utf8').trim();
            const body = [
              marker,
              '### Coverage Summary',
              '```',
              coverage,
              '```',
            ].join('\n');
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            const existingComments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number,
              per_page: 100,
            });
            const previous = existingComments.data.find(comment =>
              comment.body && comment.body.startsWith(marker)
            );
            if (previous) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: previous.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,
                body,
              });
            }
